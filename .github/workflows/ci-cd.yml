name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Generate Models & Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # 3.14 is not released yet; 3.11 is stable

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov datamodel-code-generator

      - name: Generate Pydantic models from OpenAPI
        run: |
          source .venv/bin/activate
          datamodel-codegen \
            --input openapi.yaml \
            --input-file-type openapi \
            --output ./app/models/generated_models

      - name: Run tests with coverage
        run: |
          source .venv/bin/activate
          export PYTHONPATH="${PYTHONPATH}:$(pwd)"
          pytest --cov=app --cov-report=term-missing --cov-report=xml -v

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test

    permissions:
      contents: read
      packages: write  # needed for GHCR push
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/creditcardvalidatorapi:latest .

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository }}/creditcardvalidatorapi:latest

  deploy:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'  # Only deploy from main branch

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init & Apply
        run: |
          cd terraform
          terraform init
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan
